{"version":3,"file":"statistics.js","sources":["pages/statistics/statistics.uvue","../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvc3RhdGlzdGljcy9zdGF0aXN0aWNzLnV2dWU"],"sourcesContent":["<template>\r\n\t<view class=\"container\">\r\n\t\t<!-- 顶部统计信息 -->\r\n\t\t<view class=\"stats-section\">\r\n\t\t\t<view class=\"stat-card\">\r\n\t\t\t\t<text class=\"stat-number\">{{ statistics.totalResidents || 0 }}</text>\r\n\t\t\t\t<text class=\"stat-label\">已入住</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"stat-card\">\r\n\t\t\t\t<text class=\"stat-number\">{{ statistics.totalCapacity || 0 }}</text>\r\n\t\t\t\t<text class=\"stat-label\">总容量</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"stat-card\">\r\n\t\t\t\t<text class=\"stat-number\">{{ statistics.occupancyRate || 0 }}%</text>\r\n\t\t\t\t<text class=\"stat-label\">入住率</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 用户信息 -->\r\n\t\t<view class=\"user-section\">\r\n\t\t\t<view class=\"user-card\">\r\n\t\t\t\t<text class=\"user-name\">{{ userInfo.nickname || '未注册' }}</text>\r\n\t\t\t\t<text class=\"user-phone\">{{ userInfo.phone || '' }}</text>\r\n\t\t\t\t<view class=\"user-badges\">\r\n\t\t\t\t\t<text v-if=\"isRegistered\" class=\"badge registered\">已注册</text>\r\n\t\t\t\t\t<text v-if=\"hasHighCredit\" class=\"badge high-credit\">已认证</text>\r\n\t\t\t\t\t<text v-if=\"isAdmin\" class=\"badge admin\">管理员</text>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script setup lang=\"uts\">\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { getCommunityStats } from '@/utils/buildingData.js'\r\nimport { getUserOpenid } from '@/utils/mockData.uts'\r\n\r\nconst communityStats = ref(getCommunityStats())\r\nconst statistics = reactive({\r\n\ttotalResidents: 0,\r\n\ttotalCapacity: communityStats.value.totalDoors,\r\n\toccupancyRate: 0\r\n})\r\nconst userInfo = ref({\r\n\tnickname: '',\r\n\tphone: '',\r\n\tcredit_level: 0,\r\n\tis_super_admin: false,\r\n\tis_unit_admin: false\r\n})\r\nconst isRegistered = ref(false)\r\nconst hasHighCredit = ref(false)\r\nconst isAdmin = ref(false)\r\n\r\n// 计算入住率\r\nconst calculateOccupancyRate = (residentCount: number): number => {\r\n\tconst totalCapacity = statistics.totalCapacity || communityStats.value.totalDoors\r\n\treturn totalCapacity > 0 ? Math.round((residentCount / totalCapacity) * 100) : 0\r\n}\r\n\r\n// 加载住户统计数据\r\nconst loadResidentStatistics = async (): Promise<void> => {\r\n\ttry {\r\n\t\tconst db = uniCloud.databaseForJQL()\r\n\r\n\t\t// 总住户数\r\n\t\tconst totalRes = await db.collection('residents').count()\r\n\t\tstatistics.totalResidents = totalRes.total || 0\r\n\t\tstatistics.occupancyRate = calculateOccupancyRate(totalRes.total || 0)\r\n\t} catch (error) {\r\n\t\tuni.__f__('error','at pages/statistics/statistics.uvue:72','加载住户统计数据失败:', error)\r\n\t}\r\n}\r\n\r\n// 加载用户信息\r\nconst loadUserInfo = async (): Promise<void> => {\r\n\ttry {\r\n\t\tconst openid = await getUserOpenid()\r\n\r\n\t\tconst db = uniCloud.databaseForJQL()\r\n\t\tconst res = await db.collection('residents')\r\n\t\t\t.where({\r\n\t\t\t\topenid: openid\r\n\t\t\t})\r\n\t\t\t.get()\r\n\r\n\t\tif (res.data && res.data.length > 0) {\r\n\t\t\tconst userData = res.data[0]\r\n\t\t\tuserInfo.value = {\r\n\t\t\t\tnickname: userData.nickname || '',\r\n\t\t\t\tphone: userData.phone || '',\r\n\t\t\t\tcredit_level: userData.credit_level || 0,\r\n\t\t\t\tis_super_admin: userData.is_super_admin || false,\r\n\t\t\t\tis_unit_admin: userData.is_unit_admin || false\r\n\t\t\t}\r\n\t\t\tisRegistered.value = true\r\n\t\t\thasHighCredit.value = (userData.credit_level || 0) > 0\r\n\t\t\tisAdmin.value = !!(userData.is_super_admin || userData.is_unit_admin)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tuni.__f__('error','at pages/statistics/statistics.uvue:102','加载用户信息失败:', error)\r\n\t}\r\n}\r\n\r\n// 统一加载数据\r\nconst loadData = async (): Promise<void> => {\r\n\tloadResidentStatistics()\r\n\tloadUserInfo()\r\n}\r\n\r\nonMounted(() => {\r\n\tloadData()\r\n})\r\n</script>\r\n\r\n<style>\r\n.container {\r\n\tpadding: 20rpx;\r\n\tbackground-color: #f5f5f5;\r\n\tmin-height: 100vh;\r\n}\r\n\r\n.stats-section {\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 30rpx;\r\n}\r\n\r\n.stat-card {\r\n\tflex: 1;\r\n\tmargin: 0 10rpx;\r\n\tbackground: white;\r\n\tborder-radius: 15rpx;\r\n\tpadding: 30rpx 20rpx;\r\n\ttext-align: center;\r\n\tbox-shadow: 0 2rpx 10rpx rgba(0,0,0,0.1);\r\n}\r\n\r\n.stat-card:first-child {\r\n\tmargin-left: 0;\r\n}\r\n\r\n.stat-card:last-child {\r\n\tmargin-right: 0;\r\n}\r\n\r\n.stat-number {\r\n\tdisplay: block;\r\n\tfont-size: 36rpx;\r\n\tfont-weight: bold;\r\n\tcolor: #3cc51f;\r\n\tmargin-bottom: 10rpx;\r\n}\r\n\r\n.stat-label {\r\n\tfont-size: 24rpx;\r\n\tcolor: #666;\r\n}\r\n\r\n.user-section {\r\n\tmargin-bottom: 30rpx;\r\n}\r\n\r\n.user-card {\r\n\tbackground: white;\r\n\tborder-radius: 15rpx;\r\n\tpadding: 30rpx;\r\n\tbox-shadow: 0 2rpx 10rpx rgba(0,0,0,0.1);\r\n}\r\n\r\n.user-name {\r\n\tdisplay: block;\r\n\tfont-size: 32rpx;\r\n\tfont-weight: bold;\r\n\tcolor: #333;\r\n\tmargin-bottom: 10rpx;\r\n}\r\n\r\n.user-phone {\r\n\tdisplay: block;\r\n\tfont-size: 28rpx;\r\n\tcolor: #666;\r\n\tmargin-bottom: 20rpx;\r\n}\r\n\r\n.user-badges {\r\n\tdisplay: flex;\r\n\tgap: 10rpx;\r\n}\r\n\r\n.badge {\r\n\tfont-size: 20rpx;\r\n\tpadding: 5rpx 10rpx;\r\n\tborder-radius: 10rpx;\r\n\tcolor: white;\r\n}\r\n\r\n.badge.registered {\r\n\tbackground: #3cc51f;\r\n}\r\n\r\n.badge.high-credit {\r\n\tbackground: #2196f3;\r\n}\r\n\r\n.badge.admin {\r\n\tbackground: #ff9800;\r\n}\r\n</style>","import MiniProgramPage from 'D:/sakana/uniapp/uni-ty-map/pages/statistics/statistics.uvue'\nwx.createPage(MiniProgramPage)"],"names":["ref","getCommunityStats","reactive","__awaiter","uniCloud","uni","getUserOpenid","onMounted","MiniProgramPage"],"mappings":";;;;;;;AAsCA,UAAM,iBAAiBA,cAAAA,IAAIC,mBAAiB,kBAAA,CAAE;AAC9C,UAAM,aAAaC,uBAAS,IAAA,cAAA;AAAA,MAC3B,gBAAgB;AAAA,MAChB,eAAe,eAAe,MAAM;AAAA,MACpC,eAAe;AAAA,IACf,CAAA,CAAA;AACD,UAAM,WAAWF,kBAAI,IAAA,cAAA;AAAA,MACpB,UAAU;AAAA,MACV,OAAO;AAAA,MACP,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,eAAe;AAAA,IACf,CAAA,CAAA;AACD,UAAM,eAAeA,kBAAI,KAAK;AAC9B,UAAM,gBAAgBA,kBAAI,KAAK;AAC/B,UAAM,UAAUA,kBAAI,KAAK;AAGzB,UAAM,yBAAyB,CAAC,kBAAqB;AACpD,YAAM,gBAAgB,WAAW,iBAAiB,eAAe,MAAM;AACvE,aAAO,gBAAgB,IAAI,KAAK,MAAO,gBAAgB,gBAAiB,GAAG,IAAI;AAAA,IAChF;AAGA,UAAM,yBAAyB,MAAA;AAAA,aAAAG,cAAA,UAAA,MAAA,QAAA,QAAA,aAAA;AAC9B,YAAI;AACH,gBAAM,KAAKC,iBAAS;AAGpB,gBAAM,WAAW,MAAM,GAAG,WAAW,WAAW,EAAE;AAClD,qBAAW,iBAAiB,SAAS,SAAS;AAC9C,qBAAW,gBAAgB,uBAAuB,SAAS,SAAS,CAAC;AAAA,QACrE,SAAQ,OAAO;AACfC,wBAAG,MAAC,MAAM,SAAQ,0CAAyC,eAAe,KAAK;AAAA,QAC/E;AAAA,MACD,CAAA;AAAA;AAGD,UAAM,eAAe,MAAA;AAAA,aAAAF,cAAA,UAAA,MAAA,QAAA,QAAA,aAAA;AACpB,YAAI;AACH,gBAAM,SAAS,MAAMG,eAAAA;AAErB,gBAAM,KAAKF,iBAAS;AACpB,gBAAM,MAAM,MAAM,GAAG,WAAW,WAAW,EACzC,MAAM,IAAA,cAAA;AAAA,YACN;AAAA,WACA,CAAC,EACD;AAEF,cAAI,IAAI,QAAQ,IAAI,KAAK,SAAS,GAAG;AACpC,kBAAM,WAAW,IAAI,KAAK,CAAC;AAC3B,qBAAS,QAAQ;AAAA,cAChB,UAAU,SAAS,YAAY;AAAA,cAC/B,OAAO,SAAS,SAAS;AAAA,cACzB,cAAc,SAAS,gBAAgB;AAAA,cACvC,gBAAgB,SAAS,kBAAkB;AAAA,cAC3C,eAAe,SAAS,iBAAiB;AAAA;AAE1C,yBAAa,QAAQ;AACrB,0BAAc,SAAS,SAAS,gBAAgB,KAAK;AACrD,oBAAQ,QAAQ,CAAC,EAAE,SAAS,kBAAkB,SAAS;AAAA,UACvD;AAAA,QACD,SAAQ,OAAO;AACfC,wBAAG,MAAC,MAAM,SAAQ,2CAA0C,aAAa,KAAK;AAAA,QAC9E;AAAA,MACD,CAAA;AAAA;AAGD,UAAM,WAAW,MAAA;AAAA,aAAAF,cAAA,UAAA,MAAA,QAAA,QAAA,aAAA;AAChB;AACA;MACA,CAAA;AAAA;AAEDI,kBAAAA,UAAU,MAAA;AACT;IACD,CAAC;;;;;;;;;;;;;;;;;;;;AChHD,GAAG,WAAWC,SAAe;"}