{"version":3,"file":"mockData.js","sources":["utils/mockData.uts"],"sourcesContent":["// 插入多个测试住户\r\nexport async function insertMultipleTestResidents() {\r\n\tconst db = uniCloud.databaseForJQL()\r\n\r\n\tconst testResidents = [\r\n\t\t// 栋1住户\r\n\t\t{ building: 1, unit: 37, floor: 1, door: 1, nickname: '张三', phone: '13800138001', openid: 'openid_1_1', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 1, unit: 37, floor: 1, door: 2, nickname: '李四', phone: '13800138002', openid: 'openid_1_2', credit_level: 2, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 1, unit: 37, floor: 2, door: 1, nickname: '王五', phone: '13800138003', openid: 'openid_1_3', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: false, owner_type: 'tenant' },\r\n\t\t{ building: 1, unit: 37, floor: 2, door: 2, nickname: '赵六', phone: '13800138004', openid: 'openid_1_4', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 1, unit: 37, floor: 3, door: 1, nickname: '钱七', phone: '13800138005', openid: 'openid_1_5', credit_level: 2, is_super_admin: false, is_unit_admin: false, is_family_owner: false, owner_type: 'tenant' },\r\n\r\n\t\t// 栋2住户\r\n\t\t{ building: 2, unit: 37, floor: 1, door: 1, nickname: '孙八', phone: '13800138006', openid: 'openid_2_1', credit_level: 1, is_super_admin: false, is_unit_admin: true, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 2, unit: 37, floor: 1, door: 2, nickname: '周九', phone: '13800138007', openid: 'openid_2_2', credit_level: 2, is_super_admin: false, is_unit_admin: false, is_family_owner: false, owner_type: 'tenant' },\r\n\t\t{ building: 2, unit: 37, floor: 2, door: 1, nickname: '吴十', phone: '13800138008', openid: 'openid_2_3', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 2, unit: 37, floor: 2, door: 2, nickname: '郑十一', phone: '13800138009', openid: 'openid_2_4', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: false, owner_type: 'tenant' },\r\n\t\t{ building: 2, unit: 37, floor: 3, door: 1, nickname: '王十二', phone: '13800138010', openid: 'openid_2_5', credit_level: 2, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 2, unit: 37, floor: 3, door: 2, nickname: '李十三', phone: '13800138011', openid: 'openid_2_6', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: false, owner_type: 'tenant' },\r\n\r\n\t\t// 栋3住户\r\n\t\t{ building: 3, unit: 37, floor: 1, door: 1, nickname: '张十四', phone: '13800138012', openid: 'openid_3_1', credit_level: 2, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 3, unit: 37, floor: 1, door: 2, nickname: '刘十五', phone: '13800138013', openid: 'openid_3_2', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: false, owner_type: 'tenant' },\r\n\t\t{ building: 3, unit: 37, floor: 2, door: 1, nickname: '陈十六', phone: '13800138014', openid: 'openid_3_3', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 3, unit: 37, floor: 2, door: 2, nickname: '杨十七', phone: '13800138015', openid: 'openid_3_4', credit_level: 2, is_super_admin: false, is_unit_admin: false, is_family_owner: false, owner_type: 'tenant' },\r\n\r\n\t\t// 栋4住户\r\n\t\t{ building: 4, unit: 37, floor: 1, door: 1, nickname: '黄十八', phone: '13800138016', openid: 'openid_4_1', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 4, unit: 37, floor: 1, door: 2, nickname: '林十九', phone: '13800138017', openid: 'openid_4_2', credit_level: 2, is_super_admin: false, is_unit_admin: false, is_family_owner: false, owner_type: 'tenant' },\r\n\t\t{ building: 4, unit: 37, floor: 2, door: 1, nickname: '徐二十', phone: '13800138018', openid: 'openid_4_3', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\r\n\t\t// 栋5住户\r\n\t\t{ building: 5, unit: 37, floor: 1, door: 1, nickname: '朱二一', phone: '13800138019', openid: 'openid_5_1', credit_level: 2, is_super_admin: false, is_unit_admin: false, is_family_owner: true, owner_type: 'owner' },\r\n\t\t{ building: 5, unit: 37, floor: 1, door: 2, nickname: '马二二', phone: '13800138020', openid: 'openid_5_2', credit_level: 1, is_super_admin: false, is_unit_admin: false, is_family_owner: false, owner_type: 'tenant' },\r\n\t]\r\n\r\n\ttry {\r\n\t\t// 使用JQL批量插入，直接传递数组\r\n\t\tconst result = await db.collection('residents').add(testResidents)\r\n\t\tconsole.log('批量插入测试住户成功:', result)\r\n\t\treturn result\r\n\t} catch (error) {\r\n\t\tconsole.error('批量插入测试住户失败:', error)\r\n\t\tthrow error\r\n\t}\r\n}\r\n\r\n// 获取每栋楼的住户数量\r\nexport async function getBuildingResidentCounts() {\r\n\tconst db = uniCloud.databaseForJQL()\r\n\r\n\ttry {\r\n\t\tconst result = await db.collection('residents')\r\n\t\t\t.groupBy('building')\r\n\t\t\t.groupField('count(*) as residentCount')\r\n\t\t\t.get()\r\n\r\n\t\tconst buildingCounts = {}\r\n\t\tresult.data.forEach(item => {\r\n\t\t\tbuildingCounts[item.building] = item.residentCount\r\n\t\t})\r\n\r\n\t\tconsole.log('各栋楼住户数量:', buildingCounts)\r\n\t\treturn buildingCounts\r\n\t} catch (error) {\r\n\t\tconsole.error('获取各栋楼住户数量失败:', error)\r\n\t\tthrow error\r\n\t}\r\n}\r\n\r\nexport async function getBuildingDoorCounts() {\r\n\tconst db = uniCloud.databaseForJQL()\r\n\r\n\ttry {\r\n\t\tconst result = await db.collection('residents')\r\n\t\t\t.groupBy('building, unit, floor, door')\r\n\t\t\t.groupField('count(*) as doorResidentCount')\r\n\t\t\t.get()\r\n\r\n\t\tconst buildingDoorCounts = {}\r\n\t\tresult.data.forEach(item => {\r\n\t\t\tif (!buildingDoorCounts[item.building]) {\r\n\t\t\t\tbuildingDoorCounts[item.building] = 0\r\n\t\t\t}\r\n\t\t\tbuildingDoorCounts[item.building]++\r\n\t\t})\r\n\r\n\t\tconsole.log('各栋楼door数量:', buildingDoorCounts)\r\n\t\treturn buildingDoorCounts\r\n\t} catch (error) {\r\n\t\tconsole.error('获取各栋楼door数量失败:', error)\r\n\t\tthrow error\r\n\t}\r\n}\r\n\r\n// 插入单个测试住户\r\nexport async function insertTestResident() {\r\n\tconst db = uniCloud.databaseForJQL()\r\n\r\n\ttry {\r\n\t\tconst testResident = {\r\n\t\t\tbuilding: 2,\r\n\t\t\tunit: 37,\r\n\t\t\tfloor: 1,\r\n\t\t\tdoor: 1,\r\n\t\t\tnickname: '测试用户',\r\n\t\t\tphone: '13800138000',\r\n\t\t\topenid: 'test_openid_001',\r\n\t\t\tcredit_level: 1,\r\n\t\t\tis_super_admin: true,\r\n\t\t\tis_unit_admin: true,\r\n\t\t\tis_family_owner: true,\r\n\t\t\towner_type: 'owner'\r\n\t\t}\r\n\r\n\t\t// 按照JQL文档，直接传入对象，无需类型转换\r\n\t\tconst result = await db.collection('residents').add(testResident)\r\n\t\tconsole.log('插入测试住户成功:', result)\r\n\t\treturn result\r\n\t} catch (error) {\r\n\t\tconsole.error('插入测试住户失败:', error)\r\n\t\tthrow error\r\n\t}\r\n}\r\n\r\n// 读取单个住户\r\nexport async function getTestResident() {\r\n\tconst db = uniCloud.databaseForJQL()\r\n\r\n\ttry {\r\n\t\tconst result = await db.collection('residents')\r\n\t\t\t.where({ openid: 'test_openid_001' })\r\n\t\t\t.get()\r\n\r\n\t\tconsole.log('读取测试住户:', result)\r\n\t\treturn result.data\r\n\t} catch (error) {\r\n\t\tconsole.error('读取测试住户失败:', error)\r\n\t\tthrow error\r\n\t}\r\n}\r\n\r\n// 获取用户OpenID\r\nexport async function getUserOpenid() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// #ifdef MP-WEIXIN\r\n\t\tuni.login({\r\n\t\t\tprovider: 'weixin',\r\n\t\t\tsuccess: (loginRes) => {\r\n\t\t\t\tresolve(loginRes.code)\r\n\t\t\t},\r\n\t\t\tfail: (error) => {\r\n\t\t\t\treject(error)\r\n\t\t\t}\r\n\t\t})\r\n\t\t// #endif\r\n\r\n\t\t// #ifndef MP-WEIXIN\r\n\t\tresolve('test_openid_001') // 使用测试用户\r\n\t\t// #endif\r\n\t})\r\n}"],"names":["uniCloud","uni"],"mappings":"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"}