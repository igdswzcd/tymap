{"version":3,"file":"mockData.js","sources":["utils/mockData.uts"],"sourcesContent":["// 插入单个测试住户\r\nexport async function insertTestResident() {\r\n\tconst db = uniCloud.databaseForJQL()\r\n\r\n\ttry {\r\n\t\tconst testResident = {\r\n\t\t\tbuilding: 2,\r\n\t\t\tunit: 37,\r\n\t\t\tfloor: 1,\r\n\t\t\tdoor: 1,\r\n\t\t\tnickname: '测试用户',\r\n\t\t\tphone: '13800138000',\r\n\t\t\topenid: 'test_openid_001',\r\n\t\t\tcredit_level: 1,\r\n\t\t\tis_super_admin: true,\r\n\t\t\tis_unit_admin: true,\r\n\t\t\tis_family_owner: true,\r\n\t\t\towner_type: 'owner'\r\n\t\t}\r\n\r\n\t\t// 按照JQL文档，直接传入对象，无需类型转换\r\n\t\tconst result = await db.collection('residents').add(testResident)\r\n\t\tconsole.log('插入测试住户成功:', result)\r\n\t\treturn result\r\n\t} catch (error) {\r\n\t\tconsole.error('插入测试住户失败:', error)\r\n\t\tthrow error\r\n\t}\r\n}\r\n\r\n// 读取单个住户\r\nexport async function getTestResident() {\r\n\tconst db = uniCloud.databaseForJQL()\r\n\r\n\ttry {\r\n\t\tconst result = await db.collection('residents')\r\n\t\t\t.where({ openid: 'test_openid_001' })\r\n\t\t\t.get()\r\n\r\n\t\tconsole.log('读取测试住户:', result)\r\n\t\treturn result.data\r\n\t} catch (error) {\r\n\t\tconsole.error('读取测试住户失败:', error)\r\n\t\tthrow error\r\n\t}\r\n}\r\n\r\n// 获取用户OpenID\r\nexport async function getUserOpenid() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// #ifdef MP-WEIXIN\r\n\t\tuni.login({\r\n\t\t\tprovider: 'weixin',\r\n\t\t\tsuccess: (loginRes) => {\r\n\t\t\t\tresolve(loginRes.code)\r\n\t\t\t},\r\n\t\t\tfail: (error) => {\r\n\t\t\t\treject(error)\r\n\t\t\t}\r\n\t\t})\r\n\t\t// #endif\r\n\r\n\t\t// #ifndef MP-WEIXIN\r\n\t\tresolve('test_openid_001') // 使用测试用户\r\n\t\t// #endif\r\n\t})\r\n}"],"names":["uni"],"mappings":";;SAgDsB,gBAAa;;AAClC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAM;AAElCA,0BAAI,MAAM,IAAA,cAAA;AAAA,QACT,UAAU;AAAA,QACV,SAAS,CAAC,aAAQ;AACjB,kBAAQ,SAAS,IAAI;AAAA,QACrB;AAAA,QACD,MAAM,CAAC,UAAK;AACX,iBAAO,KAAK;AAAA,QACb;AAAA,MACA,CAAA,CAAA;AAAA,IAMF,CAAC;AAAA,GACF;AAAA;;"}